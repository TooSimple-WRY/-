HOT KNIVES THROUGH BUTTER:  Evading File-based Sandboxes.		others others others others others others others others others
The repeated paragraph marks push the exploit code to the second page of the RTF document .		others others others others others others others others others others others others others others others others others
So the malicious code does not execute unless the document scrolls down to bring the exploit code up into the active window—more likely a deliberate act by a human user than simulated movement in a virtual machine .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
When the RTF is scrolled down to the second page , then only the exploit code triggers , and  as shown in Figure 5.0 , it makes a call to  URLDownloadToFileA function from the shell code to download an executable file .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others attack_activity others others others others others others others others others others others
In a typical file-based sandbox , where any mouse activity is random or preprogrammed , the RTF document ’s second page will never appear .		others others others others others others others others others others others others others others others others others others others others others others others others others others
So the malicious code never executes , and nothing seems amiss in the sandbox analysis .		others others others others others others others others others others others others others tool others others
Another sandbox-evading attack we spotted in recent attacks waits for two or more mouse clicks before executing .		others others others others others others others others others others others others others others others others others others
To thwart earlier evasion techniques that detect human interaction , some sandboxes have begun programming one-time mouse clicks when executing code .		others others others others others others others others others others others tool others others others others others others others others others others
But most people click mouse buttons many times throughout the day .		others others others others others others others others others others others others
By lying dormant until it detects more than two clicks , the malicious code ensures that the mouse clicks are from an actual person —not a sandbox mimicking one .		others others others others others others others others others others others others others others others others others others others others others others others others others others tool others others others
Here ’s how this technique works :  The malware invokes the function Get AsyncKeyState in a loop .		others others others others others others others others others others others others others function function others others others others
The function checks whether any mouse buttons are clicked by looking for the parameter 0x01 , 0x02 , or 0x04 .		others others others others others others others others others others others others others others string others string others others string others
( The parameter 0x01 is the virtual key code for the mouse ’s left button , 0x02 is the code for the right button , and 0x04 is the code of the middle button . )		others others others string others others others others others others others others others others others others others string others others others others others others others others others string others others others others others others others others others
The instruction “ xor edi edi ” sets the edi to 0 .		others others others string string string others others others others others others others
If any of the buttons is pressed , the code invokes the instruction “ inc edi , ” as shown in Figure 7 .		others others others others others others others others others others others others others others string string others others others others others others others others
After that , the  instruction “ cmp edi,2 ” checks whether the left , right or middle mouse buttons have been clicked more than two times .		others others others others others others string string others others others others others others others others others others others others others others others others others others others
If so , code exits from the loop and gets to its real work .		others others others others others others others others others others others others others others others
Otherwise , it stays under the radar , continuously checking for more mouse clicks .		others others others others others others others others others others others others others others others
Another recently discovered evasion technique involves checking for suspiciously fast mouse movement .		others others others others others others others others others others others others others
To make sure an actual person is controlling the mouse or trackpad , malware code checks how quickly the cursor is moving .		others others others others others others others others others others others others others others others others others others others others others others others
Superhuman speed is a telltale sign that the code is running in a sandbox .		malware malware others others others others others others others others others others others tool others
This technique makes use of the Windows function GetCursorPos , which retrieves the system ’s cursor position .		others others others others others others others others function others others others others others others others others others others
In the example malware code shown in Figure 8 , GetCursorPos returns 614 for the x-axis value and 185 for the y-axis value .		others others others others others others others others others others function others others others others others others others others others others others others others
After few instructions , malicious code again calls GetCursorPos to check whether the cursor position has changed .		others others others others others others others others function others others others others others others others others others
This time the function returns x= 1019 and y = 259 , as shown in Figure 6 .		others others others others others others others others others others others others others others others others others others
A few instructions after the second GetCursorPos call , the malware code  invokes the instruction “ SUB EDI , DWORD PTR DS : [410F15] ” .		others others others others others others function others others others others others others others others others string string string string string string string string string string others others
As shown in the figure 9.0 , the value in EDI is 0x103 ( 259 in decimal ) and DS : [410F15] = 0xB9 ( 185 in decimal ) .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
The value 259 and 185 are the Y coordinates retrieved from the two GetCursorPos calls .		others others others others others others others others others others others others others function others others
If the difference between the two Y-coordinate measurements is not 0 , then the malware terminates .		others others others others others others others others others others others others others others others others others
In other words , if the cursor has moved between the two GetCursorPos calls ( which are only a few instructions apart ) , then the malware concludes that the mouse movement is simulated .		others others others others others others others others others others others others function others others others others others others others others others others others others others others others others others others others others others others
That ’s too fast to be a real-world mouse or track pad in normal use , so the code must be running in a sandbox .		others others others others others others others others others others others others others others others others others others others others others others others others others tool others