Recent InPage Exploits Lead to Multiple Malware Families Release_Time :  2017-11-02 Report_URL :  https://unit42.paloaltonetworks.com/unit42-recent-inpage-exploits-lead-multiple-malware-families/ In recent weeks , Unit 42 has discovered three documents crafted to exploit the InPage program .		others tool others others others others others others others others others others others others others others others time time others security_team security_team others others others others others others others others tool others others
InPage is a word processor program that supports languages such as Urdu , Persian , Pashto , and Arabic .		tool others others others others others others others others others others others others others others others others others others others
The three InPage exploit files are linked through their use of very similar shellcode , which suggests that either the same actor is behind these attacks , or the attackers have access to a shared builder .		others others tool others others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others others others others others others person sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
The documents were found to drop the following malware families :  The previously discussed CONFUCIUS_B malware family A backdoor previously not discussed in the public domain , commonly detected by some antivirus solutions as “ BioData ”  A previously unknown backdoor that we have named MY24 .		others others others others others others others others others others others others others others malware others others others others others others others others others others others others others others others others others others others others tool others others others others others others others others others malware others
The use of InPage as an attack vector is not commonly seen , with the only previously noted attacks being documented by Kaspersky in late 2016 .		others others others tool others others others others others others others others others others others others others others others others others others security_team others others time others
The decoy documents used by the InPage exploits suggest that the targets are likely to be politically or militarily motivated .		others others others others others others tool others others others others others others others others others attack_goal others attack_goal others others
They contained subjects such as intelligence reports and political situations related to India , the Kashmir region , or terrorism being used as lure documents .		others others others others others others others others others others others others location others others location others others others industry others others others others others others
In the blog below , we analyze and present our findings on three of these malicious InPage documents :  Cyber Advisory No 91.inp Intelligence Report-561 ( 1 ).inp Tehreek-E-Kashmir Mujahaid List.inp .		others others others others others others others others others others others others others others others others tool others others sample_name sample_name sample_name sample_name sample_name sample_name sample_name sample_name sample_name sample_name sample_name sample_name sample_name others
We also include analysis of the new backdoor we discovered : MY24 .		others others others others others others others others others others others malware others
We discovered the first InPage exploit to have the following attributes :  SHA256: 1d1e7a6175e6c514aaeca8a43dabefa017ddc5b166ccb636789b6a767181a022 .		others others others others tool others others others others others others others encryption_algo others sha2 others
Original Filename : Cyber Advisory No 91.inp .		others others others sample_name sample_name sample_name sample_name others
The exploit for this document is the same one described by described by Kaspersky late last year .		others others others others others others others others others others others others others security_team others time time others
This exploit was unsuccessful in the latest version in InPage ( Version 3.60 ) , and as such the underlying vulnerability has likely been patched .		others others others others others others others others others tool others others others others others others others others others others others others others others others others
When the malicious .INP file is opened using a vulnerable version of InPage , it will execute the shellcode that is embedded within it .		others others others sample_name others others others others others others others others tool others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
This particular shellcode , along with the shellcode found within another InPage exploit document that will be discussed later on , began with a marker of ‘ LuNdLuNd ’ , followed by a series of NOPs .		others others others others others others others others others others others tool others others others others others others others others others others others others others others others string others others others others others others others others others
It continues to identify an offset to an embedded executable file , which will eventually be run on the victim machine .		others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others others
This particular shellcode uses a unique hashing mechanism for identifying and loading Microsoft Windows libraries and functions .		others others others sub_activity sub_activity sub_activity sub_activity sub_activity others attack_goal attack_goal attack_goal company OS_name attack_goal attack_goal attack_goal others
It uses this method to load a series of functions .		others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity others
This particular hashing algorithm does not appear to be widely used , however , in our searches using the YARA rule provided at the end of this blog , we were able to identify roughly 70 PE32 samples that have recently employed this same hashing technique .		others others encryption_algo others others others others others others others others others others others others others others others others tool others others others others others others others others others others others others others others others others others others others others others others others others encryption_algo others others
The shellcode then proceeds to attempt to create a mutex with a value of “ QPONMLKJIH ” to ensure only one instance of the shellcode is running at a given time .		others others others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity string sub_activity others attack_goal attack_goal attack_goal attack_goal attack_goal attack_goal attack_goal others others others others others others others
Finally , the shellcode will copy the embedded payload into newly allocated memory before executing it .		others others others others others sub_activity sub_activity sub_activity sub_activity others others others others others others others others
This newly dropped payload is a DLL with the following attributes :  SHA256: 7bbf14ced3ca490179d3727b7287eb581c3a730131331be042d0f0510bc804f9 .		others others others others others others tool others others others others others encryption_algo others sha2 others
Compile Timestamp : 2015-05-08 12:51:54 UTC PDB String : c:\users\mz\documents\visual studio 2013\Projects\Shellcode\Release\Shellcode.pdb .		others others others time time others tool others others others others others others others others
This particular DLL acts as a dropper , and has two embedded resource files—an executable payload that will be used to ultimately drop the final payload , as well as a decoy InPage file .		others others tool others others others others others others others others others others others others others others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others tool others others
It begins by spawning a new thread that loads the two files from embedded resources with names of ‘ BIN ’ and ‘ BIN2 ’ respectively .		reference_word others others sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others others others others others others others others others others others
The executable is dropped to the following path before it is executed : %TEMP%\winopen.exe .		others others others others others others others others others others others others others others others others others others
The InPage decoy document is dropped to the following path before it is run : %TEMP\SAMPLE.INP .		others tool others others others others others others others others others others others others others others others others
Based on the rough translation of this document , it appears to deal with current issues within the Kashmir region .		others others others others others others others others others others others others others others others others others others location others others
This of course is not consistent with the original filename , and it is unclear why this is the case .		others others others others others others others others others others others others others others others others others others others others others
Perhaps the attacker forgot to change the lure from a previous exploit , or simply didn’t find it necessary .		others others others others others others others others others others others others others others others others others others others others others others
This lure , while inconsistent with the original filename , is in line with the other InPage exploit file that also looked to be of the same subject matter .		others others others others others others others others others others others others others others others others tool others others others others others others others others others others others others others
The executable file in the ‘ %TEMP%\winopen.exe ’ path has the following attributes :  SHA256 692815d06b720669585a71bc8151b89ca6748f882b35e365e08cfaf6eda77049 .		others others others others others others others others others others others others others others others others others encryption_algo sha2 others
Compile Timestamp : 2017-07-31 06:03:42 UTC .		others others others time time others others
This particular executable is made to resemble the legitimate application Putty .		others others others others others others others others others others tool others
Unlike other files we witnessed up to this point , this sample has rudimentary anti-debugging and anti-analysis techniques in place prior to the main execution flow .		others others others others others others others others others others reference_word reference_word sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others
It proceeds to decrypt an embedded resource object using the RC4 algorithm .		reference_word others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity encryption_algo sub_activity others
The following key is used for decryption : VACqItywGR1v3qGxVZQPYXxMZV0o2fzp .		others others others others others others others others string others
After this data is decrypted , the following registry key is written to ensure persistence .		others others others others others others others others others others others others others sub_activity sub_activity others
Again , we see the malware mimic the appearance of the legitimate Putty application .		others others others others reference_word reference_word sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity tool sub_activity others
HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce\Putty – %TEMP%\winopen.exe .		others others others others others others others
Finally , the malware will spawn a new suspended instance of itself , where the decrypted data is written and subsequently executed .		others others reference_word reference_word others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others others
This next stage of malware has the following properties :  SHA256: bb5540fe0bbc0cda08865aad891a585cd465b224bfe84762216cd04178087516 .		others others others others others others others others others others encryption_algo others sha2 others
Compile Timestamp : 2017-05-17 05:47:05 UTC .		others others others time time others others
This malware operates almost identical to the previously witnessed sample .		others others others others others others others others others others others
However , this time the embedded resource object is decrypted using the following RC4 key : kRPAnN2DN6vfrxsJ55Lntnh7Mma8E68s .		others others others others others others others others others others sub_activity sub_activity sub_activity encryption_algo sub_activity others string others
The next , and last stage of this malware execution has the following attributes :  SHA256: d1a14bc3160f5ed6232ceaf40de1959d7dba3eae614efd2882b04d538cda825b .		others others others others others others others others others others others others others others others encryption_algo others sha2 others
Compile Timestamp : 2016-10-31 02:41:09 UTC .		others others others time time others others
This final payload is an instance of the CONFUCIUS_B malware family , which we have previously discussed .		others others others others others others others others malware others others others others others others others others others
This particular sample attempts to connect to the following host for C2 operations : 151.80.14.194 .		others others others others others others others others others others others tool others others IP_evil others
We identified this malicious InPage document as having the following attributes :  SHA256: 35c5f6030513f11fd1dcf9bd232de457ba7f3af3aedc0e2e976895b296a09df6 .		others others others others tool others others others others others others others encryption_algo others sha2 others
Original Filename : Intelligence Report-561 ( 1 ).inp .		others others others sample_name sample_name sample_name sample_name sample_name sample_name others
This particular exploit file uses the exact same shellcode witnessed previously , where an embedded DLL is loaded into memory .		reference_word reference_word reference_word reference_word sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others tool others others others others others
Again , this executable drops and executes two files—a Microsoft Windows executable payload and an InPage decoy document .		others others reference_word reference_word sub_activity sub_activity sub_activity sub_activity others company OS_name others others others others tool others others others
The embedded payload within the shellcode has the following attributes :  SHA256: 83e3b2938ee6a3e354c93c6ec756da96b03cc69118b5748b07aee4d900da1844 .		others others others others others others others others others others others encryption_algo others sha2 others
Compile Timestamp : 2015-05-08 12:51:54 UTC .		others others others time time others others
PDB String : c:\users\mz\documents\visual studio 2013\Projects\Shellcode\Release\Shellcode.pdb .		tool others others others others others others others others
Again , we see the executable payload and decoy document dropped to the following respective locations :  %TEMP%\winopen.exe %TEMP%\SAMPLE.inp .		others others others others others others others others others others others others others others others others others others others others others others others others others others
The dropped executable is a previously undocumented backdoor written in Delphi that has been named BioData by multiple antivirus organizations .		others others others others others others others others others others tool others others others others tool others others others others others
This InPage exploit document follows a much simpler execution flow , as seen in the following diagram .		others tool others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others
The decoy InPage file dropped by this malware looks like the following .		others others tool others others others others others others others others others others
The language used within it appears to be a mix of Arabic and Urdu .		others others others others others others others others others others others others others others others
The Biodata payload has the following attributes :  SHA256: 5716509e4cdbf8ffa5fbce02b8881320cb852d98e590215455986a5604a453f7 .		others tool others others others others others others encryption_algo others sha2 others
Compile Timestamp : 1992-06-19 22:22:17 UTC .		others others others time time others others
Note that the timestamp above is the result of this sample being compiled in Delphi , which uses the same hardcoded compilation timestamp for all samples that are generated .		others others others others others others others others others others others others others others tool others others others others others others others others others others others others others others others
Throughout the execution of this sample , numerous strings are decoded using a customized 94-character substitution table .		others others others others others others others others others others others others others others others others others others
BioData will go through each character of the obfuscated string , and will replace each character .		tool others others others others others others others others others others others others others others others others
The malware proceeds to generate and create a ‘ Document ’ folder within the %USERPROFILE% directory .		others others others others others others others others others others others others others others others others others others others
This folder will contain all of the malware ’s files throughout its execution .		others others others others others others others others others others others others others others others
In order to maintain persistence , the malware will generate the following file in the startup folder , which points to the current path of the BioData executable : Adobe creative suit.lnk .		others others others others others others others others others others others others others others others others others others others others others others others others others others tool others others others others others others
BioData proceeds to generate a randomized 30-character string of uppercase and lowercase letters .		tool others others others others others others others others others others others others others
This string is written to the following file : %USERPROFILE%\Document\users.txt .		others others others others others others others others others others others others others others
This 30-character string is used by the malware to act as a unique identifier for the victim , and will be used for all network communication with a remote server .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
The username and computer name are identified , and are written to a string of the following format : User name and System Name :- [Username]_[Computer Name] .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
This data is obfuscated and written to the following file : %USERPROFILE%\Document\SyLog.log .		others others others others others others others others others others others others others others others others
In order to obfuscate this data , the malware uses a unique algorithm .		others others others others others others others others others others others others others others
Represented in Python , the following script will decode this file .		others others program_language others others others others others others others others others
BioData sends both GET and POST requests to the following URL : http://errorfeedback[.		tool others others others others others others others others others others others url_evil url_evil url_evil url_evil url_evil
]com/MarkQuality455/developerbuild.php .		url_evil url_evil others
POST requests are made with a hardcoded User-Agent , shown below in Figure 7 .		others others others others others others others others others others others others others others others
Additionally , a ‘ b ’ GET parameter is included that contains the victim ’s previously generated unique identifier .		others others others others others others others others others others others others others others others others others others others others others
The contents of the POST requests are the obfuscated SyLog.log file .		others others others others others others others others others others others others
The remote C2 server has been observed responding to these requests with ‘ Success ’ .		others others tool others others others others others others others others others others others others others
These requests simply act as a beacon , including the basic victim information that was previously obtained .		others others others others others others others others others others others others others others others others others others
GET requests are made in a slightly different fashion .		others others others others others others others others others others
These requests contain an empty User-Agent , and are also found to be missing a number of HTTP headers that are commonly seen .		others others others others others others others others others others others others others others others others others protocol others others others others others others
Unlike the POST requests , the malware both looks for and makes use of the response given , if any , by the C2 server .		others others others others others others others others others others others others others others others others others others others others others others others tool others others
The malware parses any response given by first hex-decoding it .		others others others others others others others others others others others
It then base64-decodes the resulting string .		others others others others others others others
The final string is used to form a subsequent GET request .		others others others others others others others others others others others others
If for instance , the malware responded with a decoded string of ‘ malware.exe ’ , the subsequent GET request would look like the following : http://errorfeedback.com/MarkQuality455/bzGwXILtkMRZaJxzciXAeCYviduBuy/malware.exe .		others others others others others others others others others others others others others sample_name others others others others others others others others others others others others others others others others
The request above uses the same victim identifier that has been observed in the previous examples provided .		others others others others others others others others others others others others others others others others others others
This hypothetical ‘ malware.exe ’ request contains the raw contents of the payload that BioData will drop to disk and execute .		others others others sample_name others others others others others others others others others others tool others others others others others others others
The contents are placed in the following file path for this hypothetical : %USERPROFILE%\Document\malware.exe .		others others others others others others others others others others others others others others others others others others
Finally , after this dropped payload is successfully executed , the malware will send a GET request such as the following : http://errorfeedback[.		others others others others others others others others others others others others others others others others others others others others others others url_evil url_evil url_evil url_evil url_evil
]com/MarkQuality455/developerbuild.php?f=62574673643246795a53356c654755&b=bzGwXILtkMRZaJxzciXAeCYviduBuy .		url_evil url_evil url_evil url_evil url_evil url_evil others
In the above example , the ‘ b ’ parameter is the victim identifier , and the ‘ f ’ parameter is the string of ‘ malware.exe ’ after it has been base64-encoded and hex-encoded .		others others others others others others others others others others others others others others others others others others others others others others others others others others sample_name others others others others others others others others others
This request alerts the attack that the hypothetical payload of ‘ malware.exe ’ has been run .		others others others others others others others others others others others sample_name others others others others others
Tehreek-E-Kashmir Mujahaid List.inp : 3e410397955d5a127182d69e019dbc8bbffeee864cd9c96e577c9c13f05a232f .		sample_name sample_name sample_name others sha2 others
Unfortunately , no decoy document was included with this exploit file .		others others others others others others others others others others others others
However , the filename provides clues as to the context that may have been present when this file was delivered to the intended recipient .		others others others others others others others others others others others others others others others others others others others others others others others others others
The phrase ‘ Tehreek-E-Kashmir ’ is most likely related to the conflict in the Kashmir region of India .		others others others others others others others others others others others others others others others others others others others
Additionally , the term ‘ Mujahaid ’ may be a misspelling of the word ‘ Mujahid ’ , a term used to describe an individual engaged in Jihad .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
This particular InPage shellcode looks to be near identical to the two others previously discussed , however , it appears as though the attackers simply partially overwrote the original shellcode that was present to substitute their own .		others others tool others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
This results in the shellcode acting as a downloader , instead of loading an embedded payload .		others others others others others others others others others others others others others others others others others
The ‘ Cyber Advisory No 91.inp ’ exploit file has the large additional size , as it included the payload .		others others others others others others others others others others others others others others others others others others others others others
The ‘ Tehreek-E-Kashmir Mujahaid List.inp ’ exploit file instead has removed this .		others others others others others others others others others others others others others
However , original artifacts from the original shellcode are still present , including the function that loads Microsoft Windows API calls using the unique hashing algorithm .		others others others others others others others others others others others others others others others others others others others others others others others others encryption_algo others others
The shellcode begins by iterating through the Process Environment Block ( PEB ) , searching for a loaded module that has a ‘ 3 ’ in the 7th position .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
In other words , the shellcode uses a simple trick to search for kernel32.dll .		others others others others others others others others others others others others others others others
It proceeds to iterate through kernel32 ’s functions , looking for the GetProcAddress function .		others others others others others others others others others others others others others function others others
In order to find this function it will compare the first four letters against ‘ GetP ’ , and the third set of four letters against ‘ ddre ’ .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
The shellcode then gets the address of the WinExec function , which in turn is used to execute the following command : cmd /c mkdir C:\Wins .		others others others others others others others others function others others others others others others others others others others others others others others others others others others others others
It then performs the following :  Gets the address of the LoadLibraryA function Loads the urlmon.dll library Gets the address of the URLDownloadToFileA function .		others others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity function sub_activity sub_activity sub_activity sample_name sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity function sub_activity others
The shellcode then proceeds to make a request to the following URL and download the response to ‘ C:\Wins\cnh ’ .		others others others others others others others others others others others tool others others others others others others others others others others others
http://zmwardrobe[.		url_evil url_evil url_evil url_evil url_evil
]com/wp-sign .		url_evil url_evil others
Finally , the shellcode will execute this downloaded file via a call to WinExec .		others others others others others others others others others others others others others function others
The response from this webserver returned a payload , that we have named MY24 , with the following attributes :  SHA256: 71b7de2e3a60803df1c3fdc46af4fd8cfb7c803a53c9a85f7311348f6ff88cbe .		others others others others others others others others others others others others others malware others others others others others others encryption_algo others sha2 others
Compile Timestamp : 2017-05-18 05:26:54 UTC .		others others others time time others others
It should also be noted that a malicious Microsoft Word document with the following properties was observed downloading and executing the same payload .		others others others others others others others others others others others others others others others others others others others others others others others others
SHA256: 3f1d3d02e7707b2bc686b5add875e1258c65a0facd5cf8910ba0f321e230e17c .		encryption_algo others sha2 others
Original Filename : Las Vegas ISIS Claim Proof.doc .		others others others sample_name sample_name sample_name sample_name sample_name others
First Seen : 2017-10-05 05:53:27 .		others others others time time others
This backdoor begins by decoding a series of embedded strings by adding 33 to each character .		others others others others others others others others others others others others others others others others others
The malware proceeds to execute a function that is responsible for generating the following path : %APPDATA%\Startup\wintasks.exe .		others others others others others others others others others others others others others others others others others others others others others
However , this path is never used , leading us to believe that the malware author had the intention of copying the payload to this destination and likely setting persistence , but seemingly forgot to .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
MY24 proceeds to spawn two timers where the functions are responsible for resolving the C2 domain of userveblog.ddns[ .		malware others others others others others others others others others others others others others tool others others others others others
]net , as well as connecting to this domain .		others others others others others others others others others others others
Two new threads are then created—one for handling any data that is received from the connection to the C2 and one that is responsible for sending out data .		others others others others others others others others others others others others others others others others others others tool others others others others others others others others others others
Finally , a function is called that is responsible for collecting information about the victim machine .		others others others others others others others others others others others others others others others others others
The following information is collected :  Version of Microsoft Windows Username Computer name .		others others others others others others others others others others others others others others
The MY24 instance expects to receive a command initially from the remote server of userveblog.ddns[ .		others malware others others others others others others others others others others others others others others others
]net on port 9832 .		others others others others others others
All communication is performed using raw sockets via a custom communication protocol .		others others others others others others others others others others others others others
All data received and sent by MY24 is encrypted using a 13-byte XOR key of “ t6%9k$2Ri9ctv ” .		others others others others others others malware others others others others others encryption_algo others others others string string string string string others others
The data portion of the received command will include one of the following commands :  Received Command Description :  2000 Return victim information .		others others others others others others others others others others others others others others others others others others others function sub_activity sub_activity sub_activity others
2001 Get drive information .		function sub_activity sub_activity sub_activity others
2002 List files .		function sub_activity sub_activity others
2004 Unknown .		function others others
2005 Create file handle to append data .		function sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
2006 Write appended data to previously created file handle .		function sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
2007 Create file handle for reading data .		function sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
2009 Read data from previously created file handle .		function sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
2012 Spawn a shell of cmd.exe .		function sub_activity sub_activity sub_activity sub_activity sample_name others
2013 Interact with previously spawned shell .		function sub_activity sub_activity sub_activity sub_activity sub_activity others
2015 Unknown .		function others others
2016 Kill previously spawned shell .		function sub_activity sub_activity sub_activity sub_activity others
2019 List current process network communication on the victim machine .		function sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
2021 Unknown .		function others others
2022 Kill process .		function sub_activity sub_activity others
2023 Enumerate processes .		function sub_activity sub_activity others
2025 Unknown .		function others others
Responses sometimes vary in size , but are primarily sent with a size of 9084 bytes .		others others others others others others others others others others others others others others others others others
The author of this tool did not allocate proper buffer size when sending out the data , resulting in part of the stack being included in the response by the MY24 malware .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others malware others others
Examples of commands being sent and received may be seen below .		others others others others others others others others others others others others
A custom server was written to interact with the MY24 malware .		others others others others others others others others others malware others others
While documents designed to exploit the InPage software are rare , they are not new – however in recent weeks Unit42 has observed numerous InPage exploits leveraging similar shellcode , suggesting continued use of the exploit previously discussed by Kaspersky .		others others others others others others tool others others others others others others others others others others others others others security_team others others others tool others others others others others others others others others others others others others others security_team others
The decoy documents dropped suggest that the targets are likely to be politically or militarily motivated , with subjects such as Intelligence reports and political situations being used as lure documents .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
The variety of malware payloads dropped suggests the attackers behind these attacks have a reasonable development resource behind them and Unit42 continues to observe new versions of these malware families being created .		others others others others others others others others others others others others others others others others others others others others security_team others others others others others others others others others others others others
Palo Alto Networks customers are protected against these threats in a number of ways :  All domains observed in these malware families have been flagged as malicious .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others
All payloads are appropriately categorized as malicious within the WildFire platform and blocked by Traps .		others others others others others others others others others others others others others others others others
The payloads witnessed have been tagged in AutoFocus as Confucius_B , MY24 , and BioData for continued tracking and observation .		others others others others others others others others others malware others malware others others tool others others others others others others