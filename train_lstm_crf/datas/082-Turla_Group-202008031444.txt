AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations .		malware others others others others threatActor_name threatActor_name tool others target_crowd target_crowd others
Release_Time : 2020-06-17 Report_URL : https://unit42.paloaltonetworks.com/acidbox-rare-malware/  When the news broke in 2014 about a new sophisticated threat actor dubbed the Turla Group , which the Estonian foreign intelligence service believes has Russian origins and operates on behalf of the FSB , its kernelmode malware also became the first publicly-described case that abused a third-party device driver to disable Driver Signature Enforcement ( DSE ) .		others others others others others others others others others others others others others time others others others others others others others others threatActor_name threatActor_name others others others security_team security_team security_team security_team others others others others others others others others others others government others others others others others others others others others others others others others others others others others others others others others others others others others
This security mechanism was introduced in Windows Vista to prevent unsigned drivers from loading into kernel space .		others others others others others others tool tool others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others
Turla exploited the signed VirtualBox driver , VBoxDrv.sys v1.6.2 , to deactivate DSE and load its unsigned payload drivers afterward .		threatActor_name others others others tool tool others tool tool others others sample_function sample_function others sample_function sample_function sample_function sample_function sample_function others others
There is some confusion about this exploit , however , as it ’s often generally referred to as CVE-2008-3431 .		others others others others others reference_word reference_word others others others others others others others others others others others others vulnerability_cve others
The exploit used by Turla actually abuses two vulnerabilities — of which , only one was ever fixed in the aforementioned CVE .		reference_word reference_word others others threatActor_name others others others others others others others others others others others others others others others others others others
The other vulnerability was found by Turla and is used in the first version of their exploit , along with CVE-2008-3431 .		reference_word reference_word reference_word others others others threatActor_name others others others others others others others others others others others others others vulnerability_cve others
The second version of their exploit , presumably introduced in 2014 of their kernelmode malware , only uses the unpatched vulnerability , which we discuss in greater detail later .		others others others others others others others others others others time others others others others others others others reference_word reference_word reference_word others others others others others others others others others
In February 2019 , Unit 42 found that a yet-to-be-known threat actor — unbeknownst to the infosec community — discovered that the second unpatched vulnerability can not only exploit VirtualBox VBoxDrv.sys driver v1.6.2 , but also all other versions up to v3.0.0 .		others time time others security_team security_team others others others others others others others others others others security_team others others others others reference_word reference_word reference_word reference_word others others others others tool tool tool tool others others others tool tool tool tool tool tool others
Furthermore , our research shows that this unknown actor exploited VirtualBox driver version 2.2.0 to target at least two different Russian organizations in 2017 , which we are revealing for the first time .		others others others others others others reference_word reference_word reference_word others tool tool tool tool others others others others others others target_crowd target_crowd others time others others others others others others others others others others
We anticipate this was done because the driver version 2.2.0 wasn’t known to be vulnerable and thus most likely is not on the radar of security companies being exploited .		others others others others others others others tool tool tool others others others others others others others others others others others others others others others others others others others others others others
Since no other victims have been found , we believe this is a very rare malware used in targeted attacks only .		others others others others others others others others others others others others others others others others others others others others others others
The actors used a previously unknown malware family that we have dubbed AcidBox due to the first part being an anagram of the malware ’s driver device name and the second part taken from VirtualBox .		reference_word reference_word others others others others others others others others others others malware others others others others others others others others others reference_word reference_word others others others others others others others others others others others tool others
Because of the malware ’s complexity , rarity , and the fact that it ’s part of a bigger toolset , we believe it was used by an advanced threat actor for targeted attacks and it ’s likely that this malware is still being used today if the attacker is still active .		others others reference_word reference_word others others others others others others others others others others others others others others others others others others others others others reference_word others others others others others others others others others others others others others others others others reference_word reference_word others others others others others others others person others others others others
However , we anticipate that it was rewritten to a certain extent .		others others others others others reference_word others others others others others others others
Based on the information we have , we don’t believe this unknown threat actor is tied to Turla , except for the used exploit .		others others others others others others others others others others others others others others others others others others others threatActor_name others others others others others others others
Palo Alto Networks customers are protected from this threat .		company company company person others others others others others others
Our threat prevention platform with WildFire identifies this malware as malicious .		others others others others others tool others reference_word reference_word others others others
AutoFocus customers can track malware activity by using the AcidBox tag .		tool person others others others others others others others malware others others
We also created an Adversary Playbook for this attack , which can be found here .		others others others others tool tool others others others others others others others others others others
In February 2019 , we discovered a sample of AcidBox ( SHA256: eb30a1822bd6f503f8151cb04bfd315a62fa67dbfe1f573e6fcfd74636ecedd5 ) uploaded to VirusTotal , which contained a string known to be used in Turla ’s VirtualBox exploit .		others time time others others others others others others malware others encryption_algo others sha2 others others others tool others others others others others others others others others others threatActor_name others others tool tool others
A deeper analysis of the sample revealed it ’s the main worker module as part of a sophisticated malware that we couldn’t tie to any known threat actor .		others others others others reference_word reference_word others reference_word others others others others others others others others others others others others others others others others others others others others others others others others
In collaborating with our colleagues at Dr.Web , we learned that this sample was used in a targeted attack on an unspecified entity in Russia back in 2017 .		others others others person person others security_team others others others others reference_word reference_word others others others others others others others others others others others location others others time others
Thankfully , they shared three additional samples of the same malware family .		others others reference_word others others others others others reference_word reference_word reference_word reference_word others
Two of those usermode samples are modules that load the main worker from the Windows registry and one is the kernelmode payload driver embedded in the main worker sample .		reference_word reference_word reference_word reference_word reference_word others others others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others reference_word others others tool tool tool others others others tool tool tool others
Moreover , we contacted Kaspersky since the company is headquartered in Russia , which found only one additional sample in their databases that was also the usermode loader version .		others others others others security_team others reference_word reference_word others others others location others others others others reference_word reference_word reference_word others others others others others others others others others others others
We also contacted ESET , which didn’t find any victims infected with this malware , just like in our own case .		others others others security_team others others others others others others others others others others reference_word reference_word others others others others others others others others
For this reason , we conclude it ’s a very rare malware used in targeted attacks only .		others others others others others others reference_word others others others others others others others others others others others others
What all the samples have in common are the compilation timestamps of May 9 , 2017 .		others others others others others others others others others others others others time time time time others
This date seems legitimate , as the sample found by Kaspersky appeared in June 2017 in their databases .		reference_word reference_word others others others others reference_word reference_word others others security_team others others time time others others others others
Therefore , we conclude that the campaign which involved this malware took place in 2017 .		others others others others others others others others others reference_word reference_word others others others time others
We couldn’t find any newer samples and thus it ’s unknown if AcidBox is still in use or has been further developed .		others others others others others others others others others others others others others others others malware others others others others others others others others others others
We compared the specific characteristics of the samples to all publicly-known malware , but couldn’t find any clear overlaps .		others others others others others others reference_word reference_word others others others others others others others others others others others others others others
There are some very loose similarities to Remsec malware attributed to ProjectSauron , like :  DWORD size data marker values , Export function names made of 2/3 words , MS Visual C/C++ compiler used , Various import API functions overlaps , Use of vulnerable 3rd party driver to load own unsigned driver , Zlib compression used , Sensitive data encrypted in the resource section .		others others others others others others others malware others others others threatActor_name others others others others others others others others others others others others others others others others others tool tool tool tool others others others others others others others others others others others tool tool tool others sample_function sample_function sample_function sample_function others tool others others others others others others others others others others others
However , based on these facts alone , it ’s not possible to attribute the samples to the ProjectSauron threat actor .		others others others others others others others others others others others others others others others reference_word reference_word others others threatActor_name others others others
We think it ’s more likely this is a yet unknown threat actor .		others others others others others others others others others others others others others others others
The original vulnerability described in CVE-2008-3431 was found by Core Security in 2008 and affected VBoxDrv.sys less or equal version 1.6.2 .		reference_word reference_word reference_word others others vulnerability_cve others others others security_team security_team others time others others tool others others others others others others
It was fixed in version 1.6.4 and thus couldn’t be exploited anymore .		reference_word others others others others others others others others others others others others others others
The vulnerability is located in the dispatch device control routine called VBoxDrvNtDeviceControl .		reference_word reference_word others others others reference_word reference_word reference_word reference_word reference_word others tool others
On versions prior to 1.6.4 , you can call the usermode DeviceIoControl API function and send one of the following control codes together with a kernel address you want to overwrite as the input/output buffer .		others others others others others others others others sample_function sample_function sample_function sample_function sample_function sample_function others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others others others others others others others others others
The kernel address is passed down to the control handler ( see Figure 1 left , line 28 ) without any check or validation and is filled with the return value of supdrvIOCtlFast ( see Figure 1 left , line 24 ) .		others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others others
This is where the vulnerability digging from CoreSecurity stops and where Turla continues .		others others others reference_word reference_word others others security_team others others others threatActor_name others others
In the original exploit , the return value from supdrvIOCtlFast isn’t controlled and thus it will be a random value written to your kernel address .		others others others others others others others others others others others others others others others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
Turla ’s exploit controls the return value by overwriting the function pointer of supdrvIOCtlFast to redirect execution to a small shellcode , which returns the needed value .		threatActor_name tool tool tool sample_function sample_function sample_function sample_function others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others sample_function sample_function sample_function sample_function sample_function sample_function others others others others others others others
This was described in great detail in a couple of articles and the complete reverse-engineered exploit code is also available .		others others others others others others others others others others others others others others others others others others others others others
The patched version 1.6.4 ( see Figure 1 right ) doesn’t use the UserBuffer pointer anymore , which could be abused by passing a kernel address .		others tool tool tool others others others others others others others others others others others tool tool others others others others others others others others others others others others
Additionally , it checks if the rc variable is equal or bigger than zero — which isn’t needed for the patch , but more like a sanity check .		others others reference_word sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others others others others others others others others
With this patch , the original vulnerability to overwrite a kernel address was fixed .		others others others others reference_word reference_word reference_word others sample_function sample_function sample_function sample_function others others others
The other vulnerability that lets you control the function pointer of supdrvIOCtlFast remained unpatched .		reference_word reference_word reference_word others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others others others
Of course , that ’s because it wasn’t discovered by Core Security at the time , but only a few years later by the Turla threat actor .		others others others others others others others reference_word others others others others others security_team security_team others others others others others others others others others others others others threatActor_name others others others
While Turla still uses the vulnerable VirtualBox driver v.1.6.2 to date , it only makes use of the unpatched vulnerability .		others threatActor_name others others others others tool tool tool others others others reference_word others others others others others tool tool others
The reason why and how it uses it was described by Lastline , and also the reverse-engineered exploit code is available in a project named Turla Driver Loader .		others others others others others reference_word others reference_word others others others security_team others others others others others others others others others others others others others tool tool tool others
The secret is the exact same exploit , with only a small modification — which we won’t disclose here — can be used on all VBoxDrv.sys versions up to 3.0.0 .		others others others reference_word reference_word reference_word reference_word others others others others others others others others others others others others others others others others others others others others tool others others others others others
This was also figured out by an unknown threat actor .		others others others others others others others others others others others
While VirtualBox versions smaller than 4.0 aren’t available on the official website anymore , they can still be found on some software download sites .		others tool tool tool tool tool others others others others others others others others others others reference_word others others others others others others others others others others
Starting from version 3.0.0 , some structures and routines have changed so the exploit does not work anymore .		others others others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others tool tool sample_function sample_function sample_function sample_function others
However , it can’t be ruled out that in later versions it ’s still possible to exploit the same vulnerability with some more adjustments .		others others others others others others others others others others others others others reference_word others others others others others others reference_word reference_word reference_word others others others others others
What ’s also interesting is that not even the Turla authors themself seem to have realized that .		others others others others others others others others others others threatActor_name person reference_word others others others others others others
They still use the old VBoxDrv.sys v.1.6.2 in their otherwise stealthy exploit .		reference_word others others others tool tool tool others others others others others others
This driver is widely known to be used for malicious or various otherwise dubious purposes , for example , in-game cheats .		reference_word reference_word others others others others others others others others others others others others others others others others others attack_goal attack_goal others
The malware is a complex modular toolkit of which we have only a part of it .		reference_word reference_word others others others others others others others others others others others others others others others
In total , we have found four 64-bit usermode DLLs and an unsigned kernelmode driver ( SHA256: 3ef071e0327e7014dd374d96bed023e6c434df6f98cce88a1e7335a667f6749d ) .		others others others reference_word others others others tool tool tool others others tool tool tool others encryption_algo others sha2 others others
Three out of the four usermode samples have identical functionality and are loaders for the main worker module .		reference_word reference_word reference_word reference_word reference_word reference_word reference_word others others others others others tool tool tool tool tool tool others
They only differ in their file descriptions and the embedded and encrypted registry path .		reference_word others others others others others others others others others others others others others others
These loaders are created as security support providers ( further SSP ) .		reference_word reference_word others others others tool tool tool others others tool others others
A SSP is a DLL that exports at least the function SpLsaModeInitialize and usually provides security mechanisms such as authentication between client/server applications .		others tool others others tool others sample_function sample_function sample_function sample_function sample_function sample_function others others sample_function sample_function sample_function others others others others others others others
There are a couple of standard SSPs provided in Windows such as Kerberos ( kerberos.dll ) or NTLM ( msv1_0.dll ) .		others others others others others others tool others others tool others others tool others sample_name others others tool others sample_name others others
You can abuse the SSP interface for malware persistency and also for injection purposes .		others others others others tool tool others sample_function sample_function others others others sample_function others others
In order to maintain persistency , you have to put your SSP DLL into the Windows system directory and add the name of your DLL to a certain registry value .		others others others sample_function sample_function others others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others
Upon a system restart , your DLL gets loaded into the Windows lsass.exe process and is executed .		others others others others others others tool sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others sub_activity sub_activity others
If you just want your SSP DLL to be injected into lsass.exe , you can call the API function AddSecurityPackage which triggers immediate loading .		others others others others others tool tool sample_function sample_function sample_function sample_function sample_name others others others sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others
Of course , you need at least admin privileges for both of these methods .		others others others others others others others others others others others others others others others
The first case of a malware abusing the SSP interface was mentioned by Matt Graeber in 2014 .		others others others others reference_word reference_word others others tool tool others others others person person others time others
Since then , this persistence and injection trick has become wider known , but it ’s still rarely used in malware .		others others others others others others others others others others others others others others others others others others others others others others others
In case of the three AcidBox SSP DLLs , they don’t make use of any security related operations , but purely abuse this interface for injection purposes and most likely also for persistence .		others others others others others malware tool tool others reference_word others others others others others others others others others others others others others others reference_word reference_word others sample_function others others others others others others sample_function others
The three SSPs have different file names that are similar to the standard packages provided in Windows ( msv1_0.dll , pku2u.dll , wdigest.dll ) :  msv1_1.dll ( SHA256: b3166c417d49e94f3d9eab9b1e8ab853b58ba59f734f774b5de75ee631a9b66d ) pku.dll ( SHA256: 3ad20ca49a979e5ea4a5e154962e7caff17e4ca4f00bec7f3ab89275fcc8f58c ) windigest.dll ( SHA256: 003669761229d3e1db0f5a5b333ef62b3dffcc8e27c821ce9018362e0a2df7e9 ) .		reference_word reference_word reference_word others others others others others others others others others others others others others tool others sample_name others sample_name others sample_name others others sample_name others encryption_algo others sha2 others sample_name others encryption_algo others sha2 others sample_name others encryption_algo others sha2 others others
For this reason , we conclude the AcidBox SSPs also abuse the interface for persistence .		others others others others others others others malware tool others others reference_word reference_word others sample_function others
However , as we don’t have the component which installs the SSP DLLs , we don’t know for sure .		others others others others others others others others others tool others sample_function sample_function tool tool others others others others others others others others others
What we know is that the SSP interface is used for injection into lsass.exe , as they check at the beginning whether the process path they ’re loaded into matches the one which is embedded into every sample in the resource section ( C:\WINDOWS\SYSTEM32\lsass.exe ) .		others others others others others others tool tool others others others sample_function others sample_name others others reference_word sub_activity others others others others others others others others others others others others others reference_word reference_word others others others others others tool tool tool tool tool others others others others others others
This process path is contained in the resource 4097 which we describe later how it is hidden via steganography .		others others others others others others others others others others others others others others others others others others others others
The purpose of the AcidBox SSP DLLs is to load the main worker module from a registry value contained in resource 256 of each sample .		others others others others malware tool tool others others others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others others others others others others others others
We don’t know how the main worker DLL was stored in the registry , but we believe it was done by the same missing component which installed the SSP DLLs .		others others others others others others others tool tool tool sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others others others others tool tool others sample_function sample_function sample_function sample_function others
We also assume that the three SSP DLLs are from three different systems as one of those samples has a different registry key embedded .		others others others others reference_word reference_word reference_word reference_word others others others others others others others others reference_word reference_word others others others others others others others
Also , as these modules are the only visible part on a system — with the main worker module being loaded remains encrypted in the registry — they likely differ in some way like their chosen file name .		others others others reference_word reference_word others others others others others others others others others others others tool tool tool others others others others others others others others reference_word others others others others others others others others others others others
The main worker is stored in the registry encrypted within a data blob that contains various other metadata such as the CRC32 hash of the data blob or magic byte sequences which indicate different types of contained data .		reference_word reference_word reference_word others others others others others others others others tool tool others others others others others others others others tool tool tool tool tool tool others tool tool tool others sample_function sample_function sample_function sample_function sample_function sample_function others
After the main worker DLL gets decrypted by a SSP DLL from the registry via simply XORing the data with key 0xCA , it gets prepared to be loaded from memory .		others others reference_word reference_word reference_word sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others reference_word others others others others others others others others
It does so by creating a thread for the module and uses the exported function UpdateContext of the main worker as its start address .		reference_word others others others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others function others reference_word reference_word reference_word others others others others others
The main worker module then loads the unsigned malware driver via the VirtualBox exploit and waits for commands from one or more components that we don’t have .		reference_word reference_word reference_word reference_word others sub_activity sub_activity sub_activity sub_activity sub_activity others others tool tool others sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity sub_activity others others others others others others others
These commands include the loading of additional payloads from the registry from kernel space via the driver or the installation of new SSP DLLs .		others others others others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others tool tool others others others others others tool tool others
The main worker has 2 export functions named InitMainStartup and UpdateContext .		reference_word reference_word reference_word others others others others others function others function others
There are also XOR-encoded DLL and function names , which later get dynamically resolved and used .		others others others tool tool others others others others others others sub_activity sub_activity sub_activity others sub_activity others
All the functionality is contained in the two export functions , while DllMain does not contain any relevant code .		others others others others others others others others others others others others tool others others others others others others others
What stands out is the extensive use of custom DWORD-size status codes throughout the code .		others others others others others others others others others others others others others others others others
The main worker sample contains five icon resources with valid icons named 16 , 256 , 4097 , 8193 and 12289 .		others tool tool tool others others tool tool others others others others sample_name others sample_name others sample_name others sample_name others sample_name others
The names indicate different icon resolutions , but the icons only differ in the encrypted data appended to them which can be considered as a form of steganography .		others others others others others others others others reference_word reference_word others others others others others others others others others others others others others others others others others others others
This data is encrypted with a custom algorithm and additionally zlib compressed .		others others others sub_activity sub_activity sub_activity sub_activity sub_activity others others sub_activity sub_activity others
The same method is used within the SSP DLLs .		others others others others others others others tool tool others
A Python script for decryption and decompression can be found in the Appendix .		others program_language tool others sample_function others sample_function others others others others others others others
Resources 16 and 256 are the Windows registry keys that contain the decryption key for the embedded driver in resource 8193 and additional payloads that are likely going to be injected by the AcidBox driver .		others sample_name others sample_name others others tool tool tool others others others tool tool tool tool tool tool others others others others others tool others others others others others others others others others malware tool others
This resource contains the path of the process each sample uses to verify it is being loaded into the correct process .		others others others others others others others others others others others others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others
Resource 8193 contains the unsigned kernelmode payload driver , which is also encrypted with RSA .		others sample_name others others tool tool tool tool others others others others others others encryption_algo others
The driver is realized as a kernelmode DLL with two export functions InitEntry and InitExit .		reference_word reference_word others others others others tool tool others others others others function others function others
Resource 12289 contains the VirtualBox VBoxDrv.sys driver v2.2.0.0 signed by Sun Microsystems , which we previously described is also vulnerable .		others sample_name others others tool tool tool tool others others company company others others others others others others others others others
While studying the samples , PE header characteristics — an often overseen forensic indicator — caught our attention .		others others others others others tool tool others others others others others others others others others others others others
This little known fact can be found in the export directory and can be helpful for attributing malware samples .		others others others others others others others others others others others others others others others others sample_function sample_function sample_function others
All of the AcidBox samples contain gaps between the single exported function entries :  Every AcidBox sample has a NumberOfFunctions value in the export directory that is bigger than the NumberOfNames value .		others others others malware others others others others others others others others others others others malware others others others string string others others others others others others others others others string string others
This isn’t something unusual , as not every exported function has to have a name too .		others others others others others others others others others others others others others others others others others others others
Unnamed functions can be also called by their ordinal values .		others others others others others others others others others others others
What is uncommon , however , is that the function entries which are unnamed are also zeroed out , thus not used .		others others others others others others others others others others others others others others others others others others others others others others others
This is the result when you use your own DEF file instead of __declspec (dllexport ) to describe the attributes of your DLL file .		others others others others others others others others others tool tool others others tool others tool others others sample_function sample_function sample_function sample_function sample_function sample_function sample_function others
When you use a DEF file , you can choose which ordinal your export function will have .		others others others others tool tool others others others others others others others others others others others others
This is not possible with __declspec (dllexport ) as the Visual Studio compiler always counts your functions starting from one .		others others others others others tool others tool others others others tool tool tool others others others others others others others others
Using a DEF file instead of __declspec (dllexport ) has some advantages .		others others tool tool others others tool others tool others others others others others
You are able to export functions by ordinals and you can also redirect functions among other things .		others others others others sample_function sample_function sample_function sample_function others others others others sample_function sample_function sample_function sample_function sample_function others
The disadvantage is that you have to maintain an additional file within your project .		others others others others others others others others others others others others others others others
In the case of the AcidBox samples , we can conclude a couple of things .		others others others others others malware others others others others others others others others others others
First , the author uses a DEF file , although he doesn’t make use of its advantages .		others others others person others others tool tool others others others others others others others others others others others others
This could indicate it ’s a habit of the author to use DEF files .		others others others others others others others others others others person others others tool tool others
Second , the function ordinals seem to be chosen in steps of two integers .		others others others others others others others others others others others others others others others
A possible explanation could be that the unused ordinals were once used for functions too .		others others others others others others others others others others others others others others others others
And last , if we assume the author really has chosen to make two integer steps , then in the usermode DLLs , one export function was removed .		others others others others others others others person others others others others others others others others others others others others others tool others sub_activity sub_activity sub_activity sub_activity sub_activity others
We can see that ordinal 3 is unused , leaving a bigger gap than one integer .		others others others others others others others others others others others others others others others others others
All this information can be useful for malware attribution .		others others others others others others others others others others
A new advanced malware , dubbed AcidBox , was used by an unknown threat actor in 2017 that went undetected until now .		others others others others others others malware others others others others others others others others others time others others others others others others
It uses a known VirtualBox exploit to disable Driver Signature Enforcement in Windows , but with a new twist : While it ’s publicly known that VirtualBox driver VBoxDrv.sys v1.6.2 is vulnerable and used by Turla , this new malware uses the same exploit but with a slightly newer VirtualBox version .		reference_word others others others tool tool others sample_function sample_function sample_function sample_function sample_function sample_function others others others others others others others others others others others others others others tool tool tool tool others others others others others threatActor_name others reference_word reference_word reference_word others reference_word reference_word reference_word others others others others others tool tool others
Sometimes , you are still able to find a technically interesting Windows malware that uses a new technique .		others others others others others others others others others others others tool others others others others others others others
This has become quite a rarity in today ’s threat landscape where everything is either a copy of a copy of a copy or technically underwhelming .		others others others others others others others others others others others others others others others others others others others others others others others others others others others others
While AcidBox doesn’t use any fundamentally new methods , it breaks the myth that only VirtualBox VBoxDrv.sys 1.6.2 can be used for Turla ’s exploit .		others malware others others others others others others others others others others others others others others others tool tool tool others others others others threatActor_name others others tool others
Appending sensitive data as an overlay in icon resources , abusing the SSP interface for persistence and injection and payload storage in the Windows registry puts it into the category of interesting malware .		others others others others others others others tool tool others others others tool tool others sample_function others sample_function others tool others others others tool tool others others others others others others others others others
The samples we dubbed AcidBox are only part of a bigger toolkit which we , unfortunately , could not identify .		others others others others malware others others others others others others others others others others others others others others others others
However , we provide two Yara rules for detection and threat hunting .		others others others others others others others others others others others others others
Additionally , if you happen to find an additional sample , or are even infected , you can use the provided Python script to extract the sensitive data appended to the icon resources .		others others others others others others others others others others others others others others others others others others others others others tool tool others sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function sample_function others
All of these can be found here at Unit 42 ’s GitHub repository .		others others others others others others others others security_team security_team others others tool others others
If you have any further information about this threat , don’t hesitate to contact us .		others others others others others others others others others others others others others others others others others others
Palo Alto Networks customers are protected from this malware .		company company company person others others others reference_word reference_word others
Our threat prevention platform with WildFire identifies this malware as malicious .		others others others others others security_team others reference_word reference_word others others others
AutoFocus customers can investigate this activity with the tag AcidBox .		tool person others others others others others others others malware others
We would like to thank Dr.Web , Kaspersky , ESET and hFireF0X for their collaboration .		others others others others others security_team others security_team others security_team others security_team others others others others
Turla Group : msv1_1.dll .		threatActor_name threatActor_name others sample_name others
Turla Group : pku.dll .		threatActor_name threatActor_name others sample_name others
Turla Group : windigest.dll .		threatActor_name threatActor_name others sample_name others
Turla Group : eb30a1822bd6f503f8151cb04bfd315a62fa67dbfe1f573e6fcfd74636ecedd5 .		threatActor_name threatActor_name others sha2 others
Turla Group : 3ef071e0327e7014dd374d96bed023e6c434df6f98cce88a1e7335a667f6749d .		threatActor_name threatActor_name others sha2 others
Turla Group : 003669761229d3e1db0f5a5b333ef62b3dffcc8e27c821ce9018362e0a2df7e9 .		threatActor_name threatActor_name others sha2 others
Turla Group : b3166c417d49e94f3d9eab9b1e8ab853b58ba59f734f774b5de75ee631a9b66d .		threatActor_name threatActor_name others sha2 others
Turla Group : 3ad20ca49a979e5ea4a5e154962e7caff17e4ca4f00bec7f3ab89275fcc8f58c .		threatActor_name threatActor_name others sha2 others
Turla Group : 78827fa00ea48d96ac9af8d1c1e317d02ce11793e7f7f6e4c7aac7b5d7dd490f .		threatActor_name threatActor_name others sha2 others