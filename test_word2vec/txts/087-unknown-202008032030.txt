Goodbye Mworm, Hello Nworm: TrickBot Updates Propagation Module
Release_Time : 2020-05-28 
Report_URL : https://unit42.paloaltonetworks.com/goodbye-mworm-hello-nworm-trickbot-updates-propagation-module/
First discovered in 2016 , TrickBot is an information stealer that provides backdoor access sometimes used by criminal groups to distribute other malware .
TrickBot uses modules to perform different functions , and one key function is propagating from an infected Windows client to a vulnerable Domain Controller ( DC ) .
TrickBot currently uses three modules for propagation .
As early as April 2020 , TrickBot updated one of its propagation modules known as "mworm" to a new module called "nworm."
Infections caused through nworm leave no artifacts on an infected DC , and they disappear after a reboot or shutdown .
Other key differences of the new nworm module include : 
It retrieves an encrypted , or otherwise encoded binary , over network traffic that represents a TrickBot executable file ( the old mworm module sent it as an executable file without any sort of encryption/encoding ) .
A TrickBot infection caused by the new mworm module is run from system RAM and does not appear to remain persistent on an infected host .
This is a much better method of evading detection on an infected DC .
TrickBot is modular , meaning it uses various binaries to perform different functions during an infection .
In most cases , the basis of a TrickBot infection is a malicious Windows executable ( EXE ) file saved to disk .
This EXE is often called a "TrickBot loader" because it loads the TrickBot modules .
TrickBot modules are dynamic link libraries ( DLLs ) or EXEs run from system memory .
On an infected Windows 10 host , TrickBot modules are only found in system memory .
But on an infected Windows 7 host , we also see artifacts related to the modules stored on the disk .
These artifacts are encrypted binaries .
During a TrickBot infection , these encrypted binaries are decrypted and run from system memory as TrickBot modules .
Starting in September 2019 , TrickBot modules with propagation capabilities have been mworm , mshare , and tab .
They generate distinct activity when propagating to a vulnerable DC .
For the mshare and tab modules : An infected Windows client retrieves a new TrickBot EXE using an HTTP URL , The infected Windows client sends this new TrickBot EXE over SMB traffic to the vulnerable DC .
For the mworm module : The infected Windows client uses an SMB exploit targeting the vulnerable DC , The vulnerable DC retrieves a new TrickBot EXE using an HTTP URL and infects itself with it .
Of note , the mworm module did not usually appear unless the TrickBot infection happened in an AD environment with a DC .
Since February 2020 , URLs generated by these modules to retrieve follow-up TrickBot EXE files used the following patterns : URL generated by mshare module ends with /images/cursor.png , URL generated by mworm module ends with /images/redcar.png , URL generated by tab module ends with /images/imgpaper.png .
These URLs use IP addresses instead of domains .
In April 2020 while generating a TrickBot infection in a lab environment , TrickBot stopped using the mworm module .
In its place , a new artifact named "nworm" appeared on an infected Windows 7 client .
HTTP traffic for follow-up TrickBot EXEs caused by nworm is noticeably different than traffic caused by mworm .
The differences are : mworm : URL for TrickBot EXE ends with /images/redcar.png , nworm : URL for TrickBot EXE ends with /ico/VidT6cErs , mworm : Follow-up TrickBot EXE is returned unencrypted in the HTTP traffic , nworm : Follow-up TrickBot EXE is returned as an encrypted or otherwise encoded binary in the HTTP traffic .
By using Wireshark and examining TCP streams , we can easily spot the differences in HTTP traffic caused by the old mworm module and the new nworm module .
Like mworm , the new nworm module does not appear unless the TrickBot infection happens in an AD environment with a DC .
When nworm infects a vulnerable DC , the malware is run from memory .
No artifacts are found on the infected DC and TrickBot on the DC doesn't survive a reboot .
In cases where mshare and tab infect a vulnerable DC with TrickBot , these infections remain persistent on the DC , but TrickBot caused by nworm is not persistent .
This shouldn't be an issue for the malware , because the DC is a server and servers rarely shut down or reboot like a Windows client .
Every TrickBot binary has an identifier called a gtag .
This is found in configuration data extracted from a TrickBot binary .
Gtags can also be found in HTTP traffic during a TrickBot infection .
They indicate the specific campaign or source of infection used for a TrickBot binary .
The gtag is a short alphabetic string followed by a number representing a one-up serialization .
Examples follow : 
mor-series gtag : TrickBot caused by an Emotet infection , for example : TrickBot gtag mor84 caused by Emotet on January 27th , 2020.
ono-series gtag : various TrickBot infections initiated through malicious Microsoft Office documents like Word documents or Excel spreadsheets , distributed through English-language emails .
red-series gtag : TrickBot distributed as a DLL file instead of an EXE , for example : TrickBot gtag red5 documented on March 17th , 2020 .
Gtags for TrickBot binaries used by TrickBot modules are unique .
They break out as : tot-series gtag : TrickBot binaries used by mshare module , jim-series gtag : TrickBot binaries used by nworm ( and the old mworm ) module , lib-series gtag : TrickBot binaries used by tab module .
An infection caused by nworm is run from system memory , leaves no artifacts on an infected DC and disappears after a reboot or shutdown .
Furthermore , the TrickBot binary used by nworm is encrypted or otherwise encoded when it is retrieved over the Internet .
These characteristics are likely an attempt by TrickBot developers to avoid detection .
This is the latest in a series of changes in TrickBot as it evolves within our current threat landscape .
However , best security practices like running fully-patched and up-to-date versions of Microsoft Windows will hinder or prevent TrickBot infections .
Palo Alto Networks customers are further protected from TrickBot by our threat prevention platform .
AutoFocus users can track TrickBot activity by using the TrickBot tag .
